#!/usr/bin/env bash

# Postgres.app postgresql
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/latest/bin

# Docker
# if ! [ -x "$(docker-machine -v)" ] && [ "$(docker-machine status default)" = "Running" ]; then
#   eval "$(docker-machine env default)" >&2
# fi

# Enable rbenv
if ! [ -x "$(rbenv -v)" ]; then
  eval "$(rbenv init -)" >&2
fi

# Cache Rbenv downloaded packages
export RUBY_BUILD_CACHE_PATH="~/.rbenv/cache"

# Enable pyenv
if ! [ -x "$(pyenv -v)" ]; then
  eval "$(pyenv init -)"; >&2
fi

# Enable pyenv-virtualenv
if which pyenv-virtualenv-init > /dev/null; then
  eval "$(pyenv virtualenv-init -)";
fi

# pip should only run if there is a virtualenv currently activated
# export PIP_REQUIRE_VIRTUALENV=true

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" # This loads nvm bash_completion

# Enable jenv
if which jenv > /dev/null; then
  eval "$(jenv init -)";
fi

###########################

# Path to the bash it configuration
export BASH_IT="$HOME/.bash_it"

# Lock and Load a custom theme file
# location /.bash_it/themes/
export BASH_IT_THEME='minimal'

# Set this to false to turn off version control status checking within the prompt for all themes
export SCM_CHECK=true
export SCM_GIT_SHOW_MINIMAL_INFO=true

###########################

# Editor preferences
export EDITOR="atom -w"
export GIT_EDITOR='atom -w'

# Specify up to date certificates
# export SSL_CERT_FILE=/usr/local/opt/curl-ca-bundle/share/ca-bundle.crt

# Use Hub, Github's little friend
alias git=hub

# Don't check mail when opening terminal.
unset MAILCHECK

# Set this to false to turn off version control status checking within the prompt for all themes
export SCM_CHECK=true

# Load Bash It
source $BASH_IT/bash_it.sh
